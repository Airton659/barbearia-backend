steps:
  # 1. Constrói a imagem Docker
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '--no-cache'
    - '-t'
    # ALTERAÇÃO AQUI: troque 'barbearia-backend-gc' pelo seu novo ID de projeto
    - 'southamerica-east1-docker.pkg.dev/teste-notificacao-barbearia/barbearia-repo/barbearia-app:latest'
    - '.'

  # 2. Envia a imagem para o Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'push'
    # ALTERAÇÃO AQUI: troque 'barbearia-backend-gc' pelo seu novo ID de projeto
    - 'southamerica-east1-docker.pkg.dev/teste-notificacao-barbearia/barbearia-repo/barbearia-app:latest'

  # 3. Faz o deploy da nova imagem no Google Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
    - 'run'
    - 'deploy'
    - 'barbearia-backend-service'
    - '--image'
    # ALTERAÇÃO AQUI: troque 'barbearia-backend-gc' pelo seu novo ID de projeto
    - 'southamerica-east1-docker.pkg.dev/teste-notificacao-barbearia/barbearia-repo/barbearia-app:latest'
    - '--platform'
    - 'managed'
    - '--region'
    - 'southamerica-east1'
    - '--allow-unauthenticated'
    - '--set-secrets'
    - 'FIREBASE_ADMIN_CREDENTIALS=firebase-admin-credentials:latest'
    - '--set-env-vars'
    # Verifique se o nome do bucket é o mesmo que você criou na Etapa 1.4
    - 'CLOUD_STORAGE_BUCKET_NAME=barbearia-app-fotos,GCP_PROJECT_ID=teste-notificacao-barbearia'

# Define a imagem que foi construída
images:
  # ALTERAÇÃO AQUI: troque 'barbearia-backend-gc' pelo seu novo ID de projeto
  - 'southamerica-east1-docker.pkg.dev/teste-notificacao-barbearia/barbearia-repo/barbearia-app:latest'

# Adiciona a configuração de logging
options:
  logging: CLOUD_LOGGING_ONLY